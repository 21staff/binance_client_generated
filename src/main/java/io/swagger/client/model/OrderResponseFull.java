/*
 * Binance SPOT Public API
 * The swagger file of Binance Public API  API documents:   - [https://github.com/binance-exchange/binance-official-api-docs](https://github.com/binance-exchange/binance-official-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * OrderResponseFull
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-11-26T21:41:41.962Z[GMT]")
public class OrderResponseFull implements OneOfinlineResponse2007 {
  @SerializedName("symbol")
  private String symbol = null;

  @SerializedName("orderId")
  private Integer orderId = null;

  @SerializedName("orderListId")
  private Integer orderListId = null;

  @SerializedName("clientOrderId")
  private String clientOrderId = null;

  @SerializedName("transactTime")
  private Integer transactTime = null;

  @SerializedName("price")
  private Float price = null;

  @SerializedName("origQty")
  private Float origQty = null;

  @SerializedName("executedQty")
  private Float executedQty = null;

  @SerializedName("cummulativeQuoteQty")
  private Float cummulativeQuoteQty = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("timeInForce")
  private String timeInForce = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("side")
  private String side = null;

  @SerializedName("fills")
  private List<String> fills = null;

  public OrderResponseFull symbol(String symbol) {
    this.symbol = symbol;
    return this;
  }

   /**
   * Get symbol
   * @return symbol
  **/
  @Schema(example = "BNBBTC", description = "")
  public String getSymbol() {
    return symbol;
  }

  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }

  public OrderResponseFull orderId(Integer orderId) {
    this.orderId = orderId;
    return this;
  }

   /**
   * Get orderId
   * @return orderId
  **/
  @Schema(example = "28", description = "")
  public Integer getOrderId() {
    return orderId;
  }

  public void setOrderId(Integer orderId) {
    this.orderId = orderId;
  }

  public OrderResponseFull orderListId(Integer orderListId) {
    this.orderListId = orderListId;
    return this;
  }

   /**
   * Unless OCO, value will be -1
   * @return orderListId
  **/
  @Schema(example = "-1", description = "Unless OCO, value will be -1")
  public Integer getOrderListId() {
    return orderListId;
  }

  public void setOrderListId(Integer orderListId) {
    this.orderListId = orderListId;
  }

  public OrderResponseFull clientOrderId(String clientOrderId) {
    this.clientOrderId = clientOrderId;
    return this;
  }

   /**
   * Get clientOrderId
   * @return clientOrderId
  **/
  @Schema(example = "6gCrw2kRUAF9CvJDGP16IP", description = "")
  public String getClientOrderId() {
    return clientOrderId;
  }

  public void setClientOrderId(String clientOrderId) {
    this.clientOrderId = clientOrderId;
  }

  public OrderResponseFull transactTime(Integer transactTime) {
    this.transactTime = transactTime;
    return this;
  }

   /**
   * Get transactTime
   * @return transactTime
  **/
  @Schema(example = "1507725176595", description = "")
  public Integer getTransactTime() {
    return transactTime;
  }

  public void setTransactTime(Integer transactTime) {
    this.transactTime = transactTime;
  }

  public OrderResponseFull price(Float price) {
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @Schema(example = "1.00000000", description = "")
  public Float getPrice() {
    return price;
  }

  public void setPrice(Float price) {
    this.price = price;
  }

  public OrderResponseFull origQty(Float origQty) {
    this.origQty = origQty;
    return this;
  }

   /**
   * Get origQty
   * @return origQty
  **/
  @Schema(example = "10.00000000", description = "")
  public Float getOrigQty() {
    return origQty;
  }

  public void setOrigQty(Float origQty) {
    this.origQty = origQty;
  }

  public OrderResponseFull executedQty(Float executedQty) {
    this.executedQty = executedQty;
    return this;
  }

   /**
   * Get executedQty
   * @return executedQty
  **/
  @Schema(example = "10.00000000", description = "")
  public Float getExecutedQty() {
    return executedQty;
  }

  public void setExecutedQty(Float executedQty) {
    this.executedQty = executedQty;
  }

  public OrderResponseFull cummulativeQuoteQty(Float cummulativeQuoteQty) {
    this.cummulativeQuoteQty = cummulativeQuoteQty;
    return this;
  }

   /**
   * Get cummulativeQuoteQty
   * @return cummulativeQuoteQty
  **/
  @Schema(example = "10.00000000", description = "")
  public Float getCummulativeQuoteQty() {
    return cummulativeQuoteQty;
  }

  public void setCummulativeQuoteQty(Float cummulativeQuoteQty) {
    this.cummulativeQuoteQty = cummulativeQuoteQty;
  }

  public OrderResponseFull status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(example = "FILLED", description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public OrderResponseFull timeInForce(String timeInForce) {
    this.timeInForce = timeInForce;
    return this;
  }

   /**
   * Get timeInForce
   * @return timeInForce
  **/
  @Schema(example = "GTC", description = "")
  public String getTimeInForce() {
    return timeInForce;
  }

  public void setTimeInForce(String timeInForce) {
    this.timeInForce = timeInForce;
  }

  public OrderResponseFull type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(example = "MARKET", description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public OrderResponseFull side(String side) {
    this.side = side;
    return this;
  }

   /**
   * Get side
   * @return side
  **/
  @Schema(example = "SELL", description = "")
  public String getSide() {
    return side;
  }

  public void setSide(String side) {
    this.side = side;
  }

  public OrderResponseFull fills(List<String> fills) {
    this.fills = fills;
    return this;
  }

  public OrderResponseFull addFillsItem(String fillsItem) {
    if (this.fills == null) {
      this.fills = new ArrayList<String>();
    }
    this.fills.add(fillsItem);
    return this;
  }

   /**
   * Get fills
   * @return fills
  **/
  @Schema(description = "")
  public List<String> getFills() {
    return fills;
  }

  public void setFills(List<String> fills) {
    this.fills = fills;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderResponseFull orderResponseFull = (OrderResponseFull) o;
    return Objects.equals(this.symbol, orderResponseFull.symbol) &&
        Objects.equals(this.orderId, orderResponseFull.orderId) &&
        Objects.equals(this.orderListId, orderResponseFull.orderListId) &&
        Objects.equals(this.clientOrderId, orderResponseFull.clientOrderId) &&
        Objects.equals(this.transactTime, orderResponseFull.transactTime) &&
        Objects.equals(this.price, orderResponseFull.price) &&
        Objects.equals(this.origQty, orderResponseFull.origQty) &&
        Objects.equals(this.executedQty, orderResponseFull.executedQty) &&
        Objects.equals(this.cummulativeQuoteQty, orderResponseFull.cummulativeQuoteQty) &&
        Objects.equals(this.status, orderResponseFull.status) &&
        Objects.equals(this.timeInForce, orderResponseFull.timeInForce) &&
        Objects.equals(this.type, orderResponseFull.type) &&
        Objects.equals(this.side, orderResponseFull.side) &&
        Objects.equals(this.fills, orderResponseFull.fills);
  }

  @Override
  public int hashCode() {
    return Objects.hash(symbol, orderId, orderListId, clientOrderId, transactTime, price, origQty, executedQty, cummulativeQuoteQty, status, timeInForce, type, side, fills);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderResponseFull {\n");
    
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    orderListId: ").append(toIndentedString(orderListId)).append("\n");
    sb.append("    clientOrderId: ").append(toIndentedString(clientOrderId)).append("\n");
    sb.append("    transactTime: ").append(toIndentedString(transactTime)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    origQty: ").append(toIndentedString(origQty)).append("\n");
    sb.append("    executedQty: ").append(toIndentedString(executedQty)).append("\n");
    sb.append("    cummulativeQuoteQty: ").append(toIndentedString(cummulativeQuoteQty)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    timeInForce: ").append(toIndentedString(timeInForce)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    side: ").append(toIndentedString(side)).append("\n");
    sb.append("    fills: ").append(toIndentedString(fills)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
