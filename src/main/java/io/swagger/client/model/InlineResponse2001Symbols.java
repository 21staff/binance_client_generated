/*
 * Binance SPOT Public API
 * The swagger file of Binance Public API  API documents:   - [https://github.com/binance-exchange/binance-official-api-docs](https://github.com/binance-exchange/binance-official-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.InlineResponse2001Filters;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * InlineResponse2001Symbols
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-11-26T21:41:41.962Z[GMT]")
public class InlineResponse2001Symbols {
  @SerializedName("symbol")
  private String symbol = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("baseAsset")
  private String baseAsset = null;

  @SerializedName("baseAssetPrecision")
  private Integer baseAssetPrecision = null;

  @SerializedName("quoteAsset")
  private String quoteAsset = null;

  @SerializedName("quoteAssetPrecision")
  private Integer quoteAssetPrecision = null;

  @SerializedName("baseCommissionPrecision")
  private Integer baseCommissionPrecision = null;

  @SerializedName("quoteCommissionPrecision")
  private Integer quoteCommissionPrecision = null;

  @SerializedName("orderTypes")
  private List<String> orderTypes = null;

  @SerializedName("icebergAllowed")
  private Boolean icebergAllowed = null;

  @SerializedName("ocoAllowed")
  private Boolean ocoAllowed = null;

  @SerializedName("quoteOrderQtyMarketAllowed")
  private Boolean quoteOrderQtyMarketAllowed = null;

  @SerializedName("isSpotTradingAllowed")
  private Boolean isSpotTradingAllowed = null;

  @SerializedName("isMarginTradingAllowed")
  private Boolean isMarginTradingAllowed = null;

  @SerializedName("filters")
  private List<InlineResponse2001Filters> filters = null;

  @SerializedName("permissions")
  private List<String> permissions = null;

  public InlineResponse2001Symbols symbol(String symbol) {
    this.symbol = symbol;
    return this;
  }

   /**
   * Get symbol
   * @return symbol
  **/
  @Schema(example = "ETHBTC", description = "")
  public String getSymbol() {
    return symbol;
  }

  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }

  public InlineResponse2001Symbols status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(example = "TRADING", description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public InlineResponse2001Symbols baseAsset(String baseAsset) {
    this.baseAsset = baseAsset;
    return this;
  }

   /**
   * Get baseAsset
   * @return baseAsset
  **/
  @Schema(example = "ETH", description = "")
  public String getBaseAsset() {
    return baseAsset;
  }

  public void setBaseAsset(String baseAsset) {
    this.baseAsset = baseAsset;
  }

  public InlineResponse2001Symbols baseAssetPrecision(Integer baseAssetPrecision) {
    this.baseAssetPrecision = baseAssetPrecision;
    return this;
  }

   /**
   * Get baseAssetPrecision
   * @return baseAssetPrecision
  **/
  @Schema(example = "8", description = "")
  public Integer getBaseAssetPrecision() {
    return baseAssetPrecision;
  }

  public void setBaseAssetPrecision(Integer baseAssetPrecision) {
    this.baseAssetPrecision = baseAssetPrecision;
  }

  public InlineResponse2001Symbols quoteAsset(String quoteAsset) {
    this.quoteAsset = quoteAsset;
    return this;
  }

   /**
   * Get quoteAsset
   * @return quoteAsset
  **/
  @Schema(example = "BTC", description = "")
  public String getQuoteAsset() {
    return quoteAsset;
  }

  public void setQuoteAsset(String quoteAsset) {
    this.quoteAsset = quoteAsset;
  }

  public InlineResponse2001Symbols quoteAssetPrecision(Integer quoteAssetPrecision) {
    this.quoteAssetPrecision = quoteAssetPrecision;
    return this;
  }

   /**
   * Get quoteAssetPrecision
   * @return quoteAssetPrecision
  **/
  @Schema(example = "8", description = "")
  public Integer getQuoteAssetPrecision() {
    return quoteAssetPrecision;
  }

  public void setQuoteAssetPrecision(Integer quoteAssetPrecision) {
    this.quoteAssetPrecision = quoteAssetPrecision;
  }

  public InlineResponse2001Symbols baseCommissionPrecision(Integer baseCommissionPrecision) {
    this.baseCommissionPrecision = baseCommissionPrecision;
    return this;
  }

   /**
   * Get baseCommissionPrecision
   * @return baseCommissionPrecision
  **/
  @Schema(example = "8", description = "")
  public Integer getBaseCommissionPrecision() {
    return baseCommissionPrecision;
  }

  public void setBaseCommissionPrecision(Integer baseCommissionPrecision) {
    this.baseCommissionPrecision = baseCommissionPrecision;
  }

  public InlineResponse2001Symbols quoteCommissionPrecision(Integer quoteCommissionPrecision) {
    this.quoteCommissionPrecision = quoteCommissionPrecision;
    return this;
  }

   /**
   * Get quoteCommissionPrecision
   * @return quoteCommissionPrecision
  **/
  @Schema(example = "8", description = "")
  public Integer getQuoteCommissionPrecision() {
    return quoteCommissionPrecision;
  }

  public void setQuoteCommissionPrecision(Integer quoteCommissionPrecision) {
    this.quoteCommissionPrecision = quoteCommissionPrecision;
  }

  public InlineResponse2001Symbols orderTypes(List<String> orderTypes) {
    this.orderTypes = orderTypes;
    return this;
  }

  public InlineResponse2001Symbols addOrderTypesItem(String orderTypesItem) {
    if (this.orderTypes == null) {
      this.orderTypes = new ArrayList<String>();
    }
    this.orderTypes.add(orderTypesItem);
    return this;
  }

   /**
   * Get orderTypes
   * @return orderTypes
  **/
  @Schema(description = "")
  public List<String> getOrderTypes() {
    return orderTypes;
  }

  public void setOrderTypes(List<String> orderTypes) {
    this.orderTypes = orderTypes;
  }

  public InlineResponse2001Symbols icebergAllowed(Boolean icebergAllowed) {
    this.icebergAllowed = icebergAllowed;
    return this;
  }

   /**
   * Get icebergAllowed
   * @return icebergAllowed
  **/
  @Schema(example = "true", description = "")
  public Boolean isIcebergAllowed() {
    return icebergAllowed;
  }

  public void setIcebergAllowed(Boolean icebergAllowed) {
    this.icebergAllowed = icebergAllowed;
  }

  public InlineResponse2001Symbols ocoAllowed(Boolean ocoAllowed) {
    this.ocoAllowed = ocoAllowed;
    return this;
  }

   /**
   * Get ocoAllowed
   * @return ocoAllowed
  **/
  @Schema(example = "true", description = "")
  public Boolean isOcoAllowed() {
    return ocoAllowed;
  }

  public void setOcoAllowed(Boolean ocoAllowed) {
    this.ocoAllowed = ocoAllowed;
  }

  public InlineResponse2001Symbols quoteOrderQtyMarketAllowed(Boolean quoteOrderQtyMarketAllowed) {
    this.quoteOrderQtyMarketAllowed = quoteOrderQtyMarketAllowed;
    return this;
  }

   /**
   * Get quoteOrderQtyMarketAllowed
   * @return quoteOrderQtyMarketAllowed
  **/
  @Schema(example = "true", description = "")
  public Boolean isQuoteOrderQtyMarketAllowed() {
    return quoteOrderQtyMarketAllowed;
  }

  public void setQuoteOrderQtyMarketAllowed(Boolean quoteOrderQtyMarketAllowed) {
    this.quoteOrderQtyMarketAllowed = quoteOrderQtyMarketAllowed;
  }

  public InlineResponse2001Symbols isSpotTradingAllowed(Boolean isSpotTradingAllowed) {
    this.isSpotTradingAllowed = isSpotTradingAllowed;
    return this;
  }

   /**
   * Get isSpotTradingAllowed
   * @return isSpotTradingAllowed
  **/
  @Schema(example = "true", description = "")
  public Boolean isIsSpotTradingAllowed() {
    return isSpotTradingAllowed;
  }

  public void setIsSpotTradingAllowed(Boolean isSpotTradingAllowed) {
    this.isSpotTradingAllowed = isSpotTradingAllowed;
  }

  public InlineResponse2001Symbols isMarginTradingAllowed(Boolean isMarginTradingAllowed) {
    this.isMarginTradingAllowed = isMarginTradingAllowed;
    return this;
  }

   /**
   * Get isMarginTradingAllowed
   * @return isMarginTradingAllowed
  **/
  @Schema(example = "true", description = "")
  public Boolean isIsMarginTradingAllowed() {
    return isMarginTradingAllowed;
  }

  public void setIsMarginTradingAllowed(Boolean isMarginTradingAllowed) {
    this.isMarginTradingAllowed = isMarginTradingAllowed;
  }

  public InlineResponse2001Symbols filters(List<InlineResponse2001Filters> filters) {
    this.filters = filters;
    return this;
  }

  public InlineResponse2001Symbols addFiltersItem(InlineResponse2001Filters filtersItem) {
    if (this.filters == null) {
      this.filters = new ArrayList<InlineResponse2001Filters>();
    }
    this.filters.add(filtersItem);
    return this;
  }

   /**
   * Get filters
   * @return filters
  **/
  @Schema(description = "")
  public List<InlineResponse2001Filters> getFilters() {
    return filters;
  }

  public void setFilters(List<InlineResponse2001Filters> filters) {
    this.filters = filters;
  }

  public InlineResponse2001Symbols permissions(List<String> permissions) {
    this.permissions = permissions;
    return this;
  }

  public InlineResponse2001Symbols addPermissionsItem(String permissionsItem) {
    if (this.permissions == null) {
      this.permissions = new ArrayList<String>();
    }
    this.permissions.add(permissionsItem);
    return this;
  }

   /**
   * Get permissions
   * @return permissions
  **/
  @Schema(description = "")
  public List<String> getPermissions() {
    return permissions;
  }

  public void setPermissions(List<String> permissions) {
    this.permissions = permissions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2001Symbols inlineResponse2001Symbols = (InlineResponse2001Symbols) o;
    return Objects.equals(this.symbol, inlineResponse2001Symbols.symbol) &&
        Objects.equals(this.status, inlineResponse2001Symbols.status) &&
        Objects.equals(this.baseAsset, inlineResponse2001Symbols.baseAsset) &&
        Objects.equals(this.baseAssetPrecision, inlineResponse2001Symbols.baseAssetPrecision) &&
        Objects.equals(this.quoteAsset, inlineResponse2001Symbols.quoteAsset) &&
        Objects.equals(this.quoteAssetPrecision, inlineResponse2001Symbols.quoteAssetPrecision) &&
        Objects.equals(this.baseCommissionPrecision, inlineResponse2001Symbols.baseCommissionPrecision) &&
        Objects.equals(this.quoteCommissionPrecision, inlineResponse2001Symbols.quoteCommissionPrecision) &&
        Objects.equals(this.orderTypes, inlineResponse2001Symbols.orderTypes) &&
        Objects.equals(this.icebergAllowed, inlineResponse2001Symbols.icebergAllowed) &&
        Objects.equals(this.ocoAllowed, inlineResponse2001Symbols.ocoAllowed) &&
        Objects.equals(this.quoteOrderQtyMarketAllowed, inlineResponse2001Symbols.quoteOrderQtyMarketAllowed) &&
        Objects.equals(this.isSpotTradingAllowed, inlineResponse2001Symbols.isSpotTradingAllowed) &&
        Objects.equals(this.isMarginTradingAllowed, inlineResponse2001Symbols.isMarginTradingAllowed) &&
        Objects.equals(this.filters, inlineResponse2001Symbols.filters) &&
        Objects.equals(this.permissions, inlineResponse2001Symbols.permissions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(symbol, status, baseAsset, baseAssetPrecision, quoteAsset, quoteAssetPrecision, baseCommissionPrecision, quoteCommissionPrecision, orderTypes, icebergAllowed, ocoAllowed, quoteOrderQtyMarketAllowed, isSpotTradingAllowed, isMarginTradingAllowed, filters, permissions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2001Symbols {\n");
    
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    baseAsset: ").append(toIndentedString(baseAsset)).append("\n");
    sb.append("    baseAssetPrecision: ").append(toIndentedString(baseAssetPrecision)).append("\n");
    sb.append("    quoteAsset: ").append(toIndentedString(quoteAsset)).append("\n");
    sb.append("    quoteAssetPrecision: ").append(toIndentedString(quoteAssetPrecision)).append("\n");
    sb.append("    baseCommissionPrecision: ").append(toIndentedString(baseCommissionPrecision)).append("\n");
    sb.append("    quoteCommissionPrecision: ").append(toIndentedString(quoteCommissionPrecision)).append("\n");
    sb.append("    orderTypes: ").append(toIndentedString(orderTypes)).append("\n");
    sb.append("    icebergAllowed: ").append(toIndentedString(icebergAllowed)).append("\n");
    sb.append("    ocoAllowed: ").append(toIndentedString(ocoAllowed)).append("\n");
    sb.append("    quoteOrderQtyMarketAllowed: ").append(toIndentedString(quoteOrderQtyMarketAllowed)).append("\n");
    sb.append("    isSpotTradingAllowed: ").append(toIndentedString(isSpotTradingAllowed)).append("\n");
    sb.append("    isMarginTradingAllowed: ").append(toIndentedString(isMarginTradingAllowed)).append("\n");
    sb.append("    filters: ").append(toIndentedString(filters)).append("\n");
    sb.append("    permissions: ").append(toIndentedString(permissions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
