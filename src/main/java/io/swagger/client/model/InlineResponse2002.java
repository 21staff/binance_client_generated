/*
 * Binance SPOT Public API
 * The swagger file of Binance Public API  API documents:   - [https://github.com/binance-exchange/binance-official-api-docs](https://github.com/binance-exchange/binance-official-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * InlineResponse2002
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-11-26T21:41:41.962Z[GMT]")
public class InlineResponse2002 {
  @SerializedName("lastUpdateId")
  private Integer lastUpdateId = null;

  @SerializedName("bids")
  private List<List<List<String>>> bids = null;

  @SerializedName("asks")
  private List<List<List<String>>> asks = null;

  public InlineResponse2002 lastUpdateId(Integer lastUpdateId) {
    this.lastUpdateId = lastUpdateId;
    return this;
  }

   /**
   * Get lastUpdateId
   * @return lastUpdateId
  **/
  @Schema(example = "1060776800", description = "")
  public Integer getLastUpdateId() {
    return lastUpdateId;
  }

  public void setLastUpdateId(Integer lastUpdateId) {
    this.lastUpdateId = lastUpdateId;
  }

  public InlineResponse2002 bids(List<List<List<String>>> bids) {
    this.bids = bids;
    return this;
  }

  public InlineResponse2002 addBidsItem(List<List<String>> bidsItem) {
    if (this.bids == null) {
      this.bids = new ArrayList<List<List<String>>>();
    }
    this.bids.add(bidsItem);
    return this;
  }

   /**
   * Get bids
   * @return bids
  **/
  @Schema(description = "")
  public List<List<List<String>>> getBids() {
    return bids;
  }

  public void setBids(List<List<List<String>>> bids) {
    this.bids = bids;
  }

  public InlineResponse2002 asks(List<List<List<String>>> asks) {
    this.asks = asks;
    return this;
  }

  public InlineResponse2002 addAsksItem(List<List<String>> asksItem) {
    if (this.asks == null) {
      this.asks = new ArrayList<List<List<String>>>();
    }
    this.asks.add(asksItem);
    return this;
  }

   /**
   * Get asks
   * @return asks
  **/
  @Schema(description = "")
  public List<List<List<String>>> getAsks() {
    return asks;
  }

  public void setAsks(List<List<List<String>>> asks) {
    this.asks = asks;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2002 inlineResponse2002 = (InlineResponse2002) o;
    return Objects.equals(this.lastUpdateId, inlineResponse2002.lastUpdateId) &&
        Objects.equals(this.bids, inlineResponse2002.bids) &&
        Objects.equals(this.asks, inlineResponse2002.asks);
  }

  @Override
  public int hashCode() {
    return Objects.hash(lastUpdateId, bids, asks);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2002 {\n");
    
    sb.append("    lastUpdateId: ").append(toIndentedString(lastUpdateId)).append("\n");
    sb.append("    bids: ").append(toIndentedString(bids)).append("\n");
    sb.append("    asks: ").append(toIndentedString(asks)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
