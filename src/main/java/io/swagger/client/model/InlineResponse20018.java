/*
 * Binance SPOT Public API
 * The swagger file of Binance Public API  API documents:   - [https://github.com/binance-exchange/binance-official-api-docs](https://github.com/binance-exchange/binance-official-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.InlineResponse20018NetworkList;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * InlineResponse20018
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-11-26T21:41:41.962Z[GMT]")
public class InlineResponse20018 {
  @SerializedName("coin")
  private String coin = null;

  @SerializedName("depositAllEnable")
  private Boolean depositAllEnable = null;

  @SerializedName("free")
  private String free = null;

  @SerializedName("freeze")
  private String freeze = null;

  @SerializedName("ipoable")
  private String ipoable = null;

  @SerializedName("ipoing")
  private String ipoing = null;

  @SerializedName("isLegalMoney")
  private Integer isLegalMoney = null;

  @SerializedName("locked")
  private String locked = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("networkList")
  private List<InlineResponse20018NetworkList> networkList = null;

  @SerializedName("storage")
  private String storage = null;

  @SerializedName("trading")
  private Boolean trading = null;

  @SerializedName("withdrawAllEnable")
  private Boolean withdrawAllEnable = null;

  @SerializedName("withdrawing")
  private String withdrawing = null;

  public InlineResponse20018 coin(String coin) {
    this.coin = coin;
    return this;
  }

   /**
   * Get coin
   * @return coin
  **/
  @Schema(example = "BTC", description = "")
  public String getCoin() {
    return coin;
  }

  public void setCoin(String coin) {
    this.coin = coin;
  }

  public InlineResponse20018 depositAllEnable(Boolean depositAllEnable) {
    this.depositAllEnable = depositAllEnable;
    return this;
  }

   /**
   * Get depositAllEnable
   * @return depositAllEnable
  **/
  @Schema(example = "true", description = "")
  public Boolean isDepositAllEnable() {
    return depositAllEnable;
  }

  public void setDepositAllEnable(Boolean depositAllEnable) {
    this.depositAllEnable = depositAllEnable;
  }

  public InlineResponse20018 free(String free) {
    this.free = free;
    return this;
  }

   /**
   * Get free
   * @return free
  **/
  @Schema(example = "0.00000000", description = "")
  public String getFree() {
    return free;
  }

  public void setFree(String free) {
    this.free = free;
  }

  public InlineResponse20018 freeze(String freeze) {
    this.freeze = freeze;
    return this;
  }

   /**
   * Get freeze
   * @return freeze
  **/
  @Schema(example = "0.00000000", description = "")
  public String getFreeze() {
    return freeze;
  }

  public void setFreeze(String freeze) {
    this.freeze = freeze;
  }

  public InlineResponse20018 ipoable(String ipoable) {
    this.ipoable = ipoable;
    return this;
  }

   /**
   * Get ipoable
   * @return ipoable
  **/
  @Schema(example = "0.00000000", description = "")
  public String getIpoable() {
    return ipoable;
  }

  public void setIpoable(String ipoable) {
    this.ipoable = ipoable;
  }

  public InlineResponse20018 ipoing(String ipoing) {
    this.ipoing = ipoing;
    return this;
  }

   /**
   * Get ipoing
   * @return ipoing
  **/
  @Schema(example = "0.00000000", description = "")
  public String getIpoing() {
    return ipoing;
  }

  public void setIpoing(String ipoing) {
    this.ipoing = ipoing;
  }

  public InlineResponse20018 isLegalMoney(Integer isLegalMoney) {
    this.isLegalMoney = isLegalMoney;
    return this;
  }

   /**
   * Get isLegalMoney
   * @return isLegalMoney
  **/
  @Schema(description = "")
  public Integer getIsLegalMoney() {
    return isLegalMoney;
  }

  public void setIsLegalMoney(Integer isLegalMoney) {
    this.isLegalMoney = isLegalMoney;
  }

  public InlineResponse20018 locked(String locked) {
    this.locked = locked;
    return this;
  }

   /**
   * Get locked
   * @return locked
  **/
  @Schema(example = "0.00000000", description = "")
  public String getLocked() {
    return locked;
  }

  public void setLocked(String locked) {
    this.locked = locked;
  }

  public InlineResponse20018 name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(example = "Bitcoin", description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public InlineResponse20018 networkList(List<InlineResponse20018NetworkList> networkList) {
    this.networkList = networkList;
    return this;
  }

  public InlineResponse20018 addNetworkListItem(InlineResponse20018NetworkList networkListItem) {
    if (this.networkList == null) {
      this.networkList = new ArrayList<InlineResponse20018NetworkList>();
    }
    this.networkList.add(networkListItem);
    return this;
  }

   /**
   * Get networkList
   * @return networkList
  **/
  @Schema(description = "")
  public List<InlineResponse20018NetworkList> getNetworkList() {
    return networkList;
  }

  public void setNetworkList(List<InlineResponse20018NetworkList> networkList) {
    this.networkList = networkList;
  }

  public InlineResponse20018 storage(String storage) {
    this.storage = storage;
    return this;
  }

   /**
   * Get storage
   * @return storage
  **/
  @Schema(example = "0.00000000", description = "")
  public String getStorage() {
    return storage;
  }

  public void setStorage(String storage) {
    this.storage = storage;
  }

  public InlineResponse20018 trading(Boolean trading) {
    this.trading = trading;
    return this;
  }

   /**
   * Get trading
   * @return trading
  **/
  @Schema(example = "true", description = "")
  public Boolean isTrading() {
    return trading;
  }

  public void setTrading(Boolean trading) {
    this.trading = trading;
  }

  public InlineResponse20018 withdrawAllEnable(Boolean withdrawAllEnable) {
    this.withdrawAllEnable = withdrawAllEnable;
    return this;
  }

   /**
   * Get withdrawAllEnable
   * @return withdrawAllEnable
  **/
  @Schema(example = "true", description = "")
  public Boolean isWithdrawAllEnable() {
    return withdrawAllEnable;
  }

  public void setWithdrawAllEnable(Boolean withdrawAllEnable) {
    this.withdrawAllEnable = withdrawAllEnable;
  }

  public InlineResponse20018 withdrawing(String withdrawing) {
    this.withdrawing = withdrawing;
    return this;
  }

   /**
   * Get withdrawing
   * @return withdrawing
  **/
  @Schema(example = "0.00000000", description = "")
  public String getWithdrawing() {
    return withdrawing;
  }

  public void setWithdrawing(String withdrawing) {
    this.withdrawing = withdrawing;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20018 inlineResponse20018 = (InlineResponse20018) o;
    return Objects.equals(this.coin, inlineResponse20018.coin) &&
        Objects.equals(this.depositAllEnable, inlineResponse20018.depositAllEnable) &&
        Objects.equals(this.free, inlineResponse20018.free) &&
        Objects.equals(this.freeze, inlineResponse20018.freeze) &&
        Objects.equals(this.ipoable, inlineResponse20018.ipoable) &&
        Objects.equals(this.ipoing, inlineResponse20018.ipoing) &&
        Objects.equals(this.isLegalMoney, inlineResponse20018.isLegalMoney) &&
        Objects.equals(this.locked, inlineResponse20018.locked) &&
        Objects.equals(this.name, inlineResponse20018.name) &&
        Objects.equals(this.networkList, inlineResponse20018.networkList) &&
        Objects.equals(this.storage, inlineResponse20018.storage) &&
        Objects.equals(this.trading, inlineResponse20018.trading) &&
        Objects.equals(this.withdrawAllEnable, inlineResponse20018.withdrawAllEnable) &&
        Objects.equals(this.withdrawing, inlineResponse20018.withdrawing);
  }

  @Override
  public int hashCode() {
    return Objects.hash(coin, depositAllEnable, free, freeze, ipoable, ipoing, isLegalMoney, locked, name, networkList, storage, trading, withdrawAllEnable, withdrawing);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20018 {\n");
    
    sb.append("    coin: ").append(toIndentedString(coin)).append("\n");
    sb.append("    depositAllEnable: ").append(toIndentedString(depositAllEnable)).append("\n");
    sb.append("    free: ").append(toIndentedString(free)).append("\n");
    sb.append("    freeze: ").append(toIndentedString(freeze)).append("\n");
    sb.append("    ipoable: ").append(toIndentedString(ipoable)).append("\n");
    sb.append("    ipoing: ").append(toIndentedString(ipoing)).append("\n");
    sb.append("    isLegalMoney: ").append(toIndentedString(isLegalMoney)).append("\n");
    sb.append("    locked: ").append(toIndentedString(locked)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    networkList: ").append(toIndentedString(networkList)).append("\n");
    sb.append("    storage: ").append(toIndentedString(storage)).append("\n");
    sb.append("    trading: ").append(toIndentedString(trading)).append("\n");
    sb.append("    withdrawAllEnable: ").append(toIndentedString(withdrawAllEnable)).append("\n");
    sb.append("    withdrawing: ").append(toIndentedString(withdrawing)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
