/*
 * Binance SPOT Public API
 * The swagger file of Binance Public API  API documents:   - [https://github.com/binance-exchange/binance-official-api-docs](https://github.com/binance-exchange/binance-official-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.InlineResponse2001RateLimits;
import io.swagger.client.model.InlineResponse2001Symbols;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * InlineResponse2001
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-11-26T21:41:41.962Z[GMT]")
public class InlineResponse2001 {
  @SerializedName("timezone")
  private String timezone = null;

  @SerializedName("serverTime")
  private Integer serverTime = null;

  @SerializedName("rateLimits")
  private List<InlineResponse2001RateLimits> rateLimits = null;

  @SerializedName("exchangeFilters")
  private List<Object> exchangeFilters = null;

  @SerializedName("symbols")
  private List<InlineResponse2001Symbols> symbols = null;

  public InlineResponse2001 timezone(String timezone) {
    this.timezone = timezone;
    return this;
  }

   /**
   * Get timezone
   * @return timezone
  **/
  @Schema(example = "UTC", description = "")
  public String getTimezone() {
    return timezone;
  }

  public void setTimezone(String timezone) {
    this.timezone = timezone;
  }

  public InlineResponse2001 serverTime(Integer serverTime) {
    this.serverTime = serverTime;
    return this;
  }

   /**
   * Get serverTime
   * @return serverTime
  **/
  @Schema(example = "1592882214236", description = "")
  public Integer getServerTime() {
    return serverTime;
  }

  public void setServerTime(Integer serverTime) {
    this.serverTime = serverTime;
  }

  public InlineResponse2001 rateLimits(List<InlineResponse2001RateLimits> rateLimits) {
    this.rateLimits = rateLimits;
    return this;
  }

  public InlineResponse2001 addRateLimitsItem(InlineResponse2001RateLimits rateLimitsItem) {
    if (this.rateLimits == null) {
      this.rateLimits = new ArrayList<InlineResponse2001RateLimits>();
    }
    this.rateLimits.add(rateLimitsItem);
    return this;
  }

   /**
   * Get rateLimits
   * @return rateLimits
  **/
  @Schema(description = "")
  public List<InlineResponse2001RateLimits> getRateLimits() {
    return rateLimits;
  }

  public void setRateLimits(List<InlineResponse2001RateLimits> rateLimits) {
    this.rateLimits = rateLimits;
  }

  public InlineResponse2001 exchangeFilters(List<Object> exchangeFilters) {
    this.exchangeFilters = exchangeFilters;
    return this;
  }

  public InlineResponse2001 addExchangeFiltersItem(Object exchangeFiltersItem) {
    if (this.exchangeFilters == null) {
      this.exchangeFilters = new ArrayList<Object>();
    }
    this.exchangeFilters.add(exchangeFiltersItem);
    return this;
  }

   /**
   * Get exchangeFilters
   * @return exchangeFilters
  **/
  @Schema(description = "")
  public List<Object> getExchangeFilters() {
    return exchangeFilters;
  }

  public void setExchangeFilters(List<Object> exchangeFilters) {
    this.exchangeFilters = exchangeFilters;
  }

  public InlineResponse2001 symbols(List<InlineResponse2001Symbols> symbols) {
    this.symbols = symbols;
    return this;
  }

  public InlineResponse2001 addSymbolsItem(InlineResponse2001Symbols symbolsItem) {
    if (this.symbols == null) {
      this.symbols = new ArrayList<InlineResponse2001Symbols>();
    }
    this.symbols.add(symbolsItem);
    return this;
  }

   /**
   * Get symbols
   * @return symbols
  **/
  @Schema(description = "")
  public List<InlineResponse2001Symbols> getSymbols() {
    return symbols;
  }

  public void setSymbols(List<InlineResponse2001Symbols> symbols) {
    this.symbols = symbols;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2001 inlineResponse2001 = (InlineResponse2001) o;
    return Objects.equals(this.timezone, inlineResponse2001.timezone) &&
        Objects.equals(this.serverTime, inlineResponse2001.serverTime) &&
        Objects.equals(this.rateLimits, inlineResponse2001.rateLimits) &&
        Objects.equals(this.exchangeFilters, inlineResponse2001.exchangeFilters) &&
        Objects.equals(this.symbols, inlineResponse2001.symbols);
  }

  @Override
  public int hashCode() {
    return Objects.hash(timezone, serverTime, rateLimits, exchangeFilters, symbols);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2001 {\n");
    
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    serverTime: ").append(toIndentedString(serverTime)).append("\n");
    sb.append("    rateLimits: ").append(toIndentedString(rateLimits)).append("\n");
    sb.append("    exchangeFilters: ").append(toIndentedString(exchangeFilters)).append("\n");
    sb.append("    symbols: ").append(toIndentedString(symbols)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
